basePath: /api/v1
definitions:
  input.AuditInput:
    properties:
      action:
        type: string
      description:
        type: string
      event_id:
        type: integer
      event_status:
        type: boolean
      variant_fields:
        additionalProperties: true
        type: object
    type: object
  output.BasicOutput:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  output.Page:
    properties:
      content:
        items: {}
        type: array
      message:
        type: string
      page_number:
        type: integer
      page_size:
        type: integer
      status:
        type: integer
      total_records:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is an audit server for events that are sourced from different
    services
  version: "1.0"
paths:
  /audit/audit:
    post:
      consumes:
      - application/json
      description: An event audit should be provided
      parameters:
      - description: Event Audit to save
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/input.AuditInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/output.BasicOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/output.BasicOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/output.BasicOutput'
      summary: Add an audit of event happened
      tags:
      - audits
  /audit/filter:
    get:
      consumes:
      - application/json
      description: Query Parameters will give the filtering abilities you can write
        mongo queries for comparisons
      parameters:
      - description: Page Number
        in: query
        name: page
        required: true
        type: integer
      - description: Page Size
        in: query
        name: size
        required: true
        type: integer
      - description: Query
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/output.Page'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/output.BasicOutput'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/output.BasicOutput'
      summary: Filter audit records with pagination
      tags:
      - audits
swagger: "2.0"
